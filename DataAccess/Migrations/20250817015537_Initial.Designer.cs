// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(DataSeekerDbContext))]
    [Migration("20250817015537_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.DownloadFile", b =>
                {
                    b.Property<int>("DownloadFileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DownloadFileId"));

                    b.Property<string>("DownloadFileName")
                        .HasColumnType("text");

                    b.HasKey("DownloadFileId");

                    b.ToTable("DownloadFiles");
                });

            modelBuilder.Entity("Entities.Models.DownloadLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DownloadDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DownloadFileId")
                        .HasColumnType("integer");

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<string>("User")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DownloadFileId");

                    b.ToTable("DownloadLine");
                });

            modelBuilder.Entity("Entities.Models.UploadFile", b =>
                {
                    b.Property<int>("UploadFileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UploadFileId"));

                    b.Property<string>("UploadFileName")
                        .HasColumnType("text");

                    b.HasKey("UploadFileId");

                    b.ToTable("UploadFiles");
                });

            modelBuilder.Entity("Entities.Models.UploadLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FileName")
                        .HasColumnType("text");

                    b.Property<string>("IpAddress")
                        .HasColumnType("text");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UploadFileId")
                        .HasColumnType("integer");

                    b.Property<string>("User")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UploadFileId");

                    b.ToTable("UploadLines");
                });

            modelBuilder.Entity("Entities.Models.DownloadLine", b =>
                {
                    b.HasOne("Entities.Models.DownloadFile", "DownloadFile")
                        .WithMany("DownloadLines")
                        .HasForeignKey("DownloadFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DownloadFile");
                });

            modelBuilder.Entity("Entities.Models.UploadLine", b =>
                {
                    b.HasOne("Entities.Models.UploadFile", "UploadFile")
                        .WithMany("UploadLines")
                        .HasForeignKey("UploadFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UploadFile");
                });

            modelBuilder.Entity("Entities.Models.DownloadFile", b =>
                {
                    b.Navigation("DownloadLines");
                });

            modelBuilder.Entity("Entities.Models.UploadFile", b =>
                {
                    b.Navigation("UploadLines");
                });
#pragma warning restore 612, 618
        }
    }
}
